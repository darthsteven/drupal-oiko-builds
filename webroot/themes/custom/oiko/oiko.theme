<?php

/**
 * Implements theme_preprocess().
 * 
 * @param $variables
 * @param $hook
 * @param $info
 */
function oiko_preprocess(&$variables, $hook, $info) {
  if ($hook == "eva_display_entity_view") {
    // Make our views titles actual titles.
    $variables['title_prefix']['#markup'] = '<h3>';
    $variables['title_suffix']['#markup'] = '</h3>';
    
    // Give our EVA views a distinctive class so we can style them later. 
    $variables['attributes']['class'][] = 'eva_display_entity_view';
  }
}

/**
 * Implements hook_preprocess_HOOK() for comment templates.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the comment and entity objects.
 *     Array keys: #comment, #commented_entity.
 */
function oiko_preprocess_comment(&$variables) {
  if ($variables['commented_entity']->getEntityTypeId() == 'node') {
    if ($variables['commented_entity']->bundle() == 'forum') {
      $variables['attributes']['class'][] = 'forum-comment';
      $variables['content_attributes']['class'][] = 'forum-comment-content';
      $variables['user_picture'] = '';
      $variables['submitted'] = [
        '#markup' => t('Submitted by @username', ['@username' => $variables['author']]) . '<br />' . $variables['created']
      ];
    }
  }
}


/**
 * Implements hook_element_info_alter().
 */
function oiko_element_info_alter(&$elements) {
  if (isset($elements['view']['#pre_render'])) {
    $elements['view']['#pre_render'][] = 'oiko_remove_theme_wrappers';
  }
}


/**
 * pre_render callback that removes #theme_wrappers
 */
function oiko_remove_theme_wrappers($element) {
  $element['#theme_wrappers'] = array();
  return $element;
}


/**
 * Implements template_preprocess_views_view().
 */
function oiko_preprocess_views_view(&$variables) {
  $view = $variables['view'];
  $display = $view->getDisplay()->getPluginId();
  $style = $view->getStyle()->getPluginId();
  if ($display == 'page' && $style == 'oiko_leaflet_map') {
    $variables['attributes']['class'][] = 'l-map-wrap';
  }
}
