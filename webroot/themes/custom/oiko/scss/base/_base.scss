// We import all foundation stuff first, to avoid conflicts with mixins etc.
@import "foundation_base";
// Then import all 'our' stuff.
@import "global";

@include to('s') {
  html {
    font-size: map-get($base-font-sizes, 'xs');
  }
}
@include from('m') {
  html {
    font-size: map-get($base-font-sizes, 'm');
  }
}

// Heading sizes
// This overrides foundation's for a few reasons:
// 1. We need to do rem calc's differently for small screens, because we have a
//    different base font size.
// 2. We add .heading-style-h* classes, so we can override defaults nicely.
// 3. We also uppercase everything.
@each $size, $headers in $header-sizes {
  @include from($size) {
    @each $header, $font-size in $headers {
      #{$header},
      .heading-style-#{$header} {
        font-size: rem-calc($font-size, map-get($base-font-sizes, $size));
      }
    }
  }
}


//
// Copy of system.theme.css.
// We can trash just the bits we want.
//
/**
 * Markup generated by theme_tablesort_indicator().
 */
th.active img {
  display: inline;
}
td.active {
  background-color: #ddd;
}

/**
 * Markup generated by Form API.
 */
tr.odd .form-item,
tr.even .form-item {
  margin-top: 0;
  margin-bottom: 0;
  white-space: nowrap;
}
.form-item .description {
  font-size: 0.85em;
}
label {
  display: block;
  font-weight: bold;
}
label.option {
  display: inline;
  font-weight: normal;
}
.marker,
.form-required {
  color: #f00;
}
.form-item input.error,
.form-item textarea.error,
.form-item select.error {
  border: 2px solid red;
}

/**
 * Inline items.
 */
.container-inline .form-actions,
.container-inline.form-actions {
  margin-top: 0;
  margin-bottom: 0;
}

/**
 * Markup generated by theme_more_link().
 */
.more-link {
  text-align: right; /* LTR */
}

/**
 * Markup generated by theme_more_help_link().
 */
.more-help-link {
  text-align: right; /* LTR */
}
.more-help-link a {
  background: url(../../misc/help.png) 0 50% no-repeat; /* LTR */
  padding: 1px 0 1px 20px; /* LTR */
}

/**
 * Markup generated by theme_pager().
 */
.item-list .pager {
  clear: both;
  text-align: center;
}
.item-list .pager li {
  background-image: none;
  display: inline;
  list-style-type: none;
  padding: 0.5em;
}
.pager-current {
  font-weight: bold;
}

/**
 * Autocomplete.
 *
 * @see autocomplete.js
 */
/* Suggestion list */
#autocomplete li.selected {
  background: #0072b9;
  color: #fff;
}

/**
 * Collapsible fieldsets.
 *
 * @see collapse.js
 */
html.js fieldset.collapsible .fieldset-legend {
  background: url(../../misc/menu-expanded.png) 5px 65% no-repeat; /* LTR */
  padding-left: 15px; /* LTR */
}
html.js fieldset.collapsed .fieldset-legend {
  background-image: url(../../misc/menu-collapsed.png); /* LTR */
  background-position: 5px 50%; /* LTR */
}
.fieldset-legend span.summary {
  color: #999;
  font-size: 0.9em;
  margin-left: 0.5em;
}

/**
 * TableDrag behavior.
 *
 * @see tabledrag.js
 */
tr.drag {
  background-color: #fffff0;
}
tr.drag-previous {
  background-color: #ffd;
}
.tabledrag-toggle-weight {
  font-size: 0.9em;
}
body div.tabledrag-changed-warning {
  margin-bottom: 0.5em;
}

/**
 * TableSelect behavior.
 *
 * @see tableselect.js
*/
tr.selected td {
  background: #ffc;
}
td.checkbox,
th.checkbox {
  text-align: center;
}

/**
 * Progress bar.
 *
 * @see progress.js
 */
.progress {
  font-weight: bold;
}
.progress .bar {
  background: #ccc;
  border-color: #666;
  margin: 0 0.2em;
  -moz-border-radius: 3px;
  -webkit-border-radius: 3px;
  border-radius: 3px;
}
.progress .filled {
  background: #0072b9 url(../../misc/progress.gif);
}


.button {
  border: 2px solid;
  text-decoration: none;
  font-weight:bold;
  vertical-align: -webkit-baseline-middle;
  transition: border-color 0.25s ease-out, background-color 0.25s ease-out, color 0.25s ease-out;
  &:hover {
    background-color: palette(aqua);
    border-color: palette(aqua);
  }
}
.button-highlight {
  border-color: palette(aqua);
  background-color: palette(aqua);
}

#{text-inputs()}, textarea {
  box-shadow: none;
}

div[class^='bg-'], div[class*=' bg-']{
  #{text-inputs()}, textarea {
    border-color: palette(white)
  }
}

select {
  box-sizing: border-box;
  border-width: 2px;
  padding: 0 ($form-spacing / 2) 0;
  @if $select-triangle-color != transparent {
    padding-#{$global-right}: ($form-spacing * 1.5);
  }
}

[type='checkbox'] {
  border: 1px solid palette(black, dark);
  height: $input-font-size;
  width: $input-font-size;
  -webkit-appearance: none;
}
[type='checkbox']:checked {
  -webkit-appearance: checkbox;
}

.hide-in-small-layout {
  @include hide-in-small-layout;
}
.hide-in-large-layout {
  @include hide-in-large-layout;
}

@each $color-name, $palette in $palettes {
  @each $shade in map-keys($palette) {
    @if $shade == base {
      .bg-#{$color-name} {
        background-color: palette($color-name, base);
      }
    }
    @else {
      .bg-#{$shade}-#{$color-name} {
        background-color: palette($color-name, $shade);
      }
    }
  }
}